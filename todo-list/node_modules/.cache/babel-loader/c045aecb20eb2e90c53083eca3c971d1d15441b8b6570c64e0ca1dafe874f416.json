{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\White\\\\Desktop\\\\my-todo-list\\\\todo-list\\\\src\\\\context\\\\DarkModeContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useCallback, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DarkModeContext = /*#__PURE__*/createContext();\nexport default function DarkModeProvider() {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = useCallback(() => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else if (theme === \"dark\") {\n      setTheme(\"light\");\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(DarkModeProvider, \"FXtnNdQeocgQteiQKYuVjZAkIio=\");\n_c = DarkModeProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useState","Navbar","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","_s","theme","setTheme","toggleTheme","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/White/Desktop/my-todo-list/todo-list/src/context/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useCallback, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport const DarkModeContext = createContext();\r\n\r\nexport default function DarkModeProvider() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const toggleTheme = useCallback(() => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else if (theme === \"dark\") {\r\n      setTheme(\"light\");\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ theme, toggleTheme }}>\r\n      <Navbar />\r\n    </DarkModeContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,eAAe,gBAAGN,aAAa,EAAE;AAE9C,eAAe,SAASO,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAMS,WAAW,GAAGV,WAAW,CAAC,MAAM;IACpC,IAAIQ,KAAK,KAAK,OAAO,EAAE;MACrBC,QAAQ,CAAC,MAAM,CAAC;IAClB,CAAC,MAAM,IAAID,KAAK,KAAK,MAAM,EAAE;MAC3BC,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA,CAACC,eAAe,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEJ,KAAK;MAAEE;IAAY,CAAE;IAAAG,QAAA,eACtDT,OAAA,CAACF,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACe;AAE/B;AAACV,EAAA,CAfuBD,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}